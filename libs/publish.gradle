// include this file in subprojects:
// apply from: rootProject.file('libs/publish.gradle')

apply plugin: 'maven-publish'
apply plugin: 'signing'

// define artifacts for upload
artifacts {
  archives jar
  archives javadocJar
  archives sourcesJar
}

publishing{
    publications{
        mavenJava(MavenPublication){
            artifactId = project.name
            // packaging 'jar'
            from components.java
            pom {
                name = project.name
                description = project.description
                url = project.project_website

                scm {
                    url = project.project_scm
                    connection = project.project_scm
                    developerConnection = project.project_scm
                }

                licenses {
                    license {
                        name = project.license
                        url = project.license_url
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = project.developerId
                        name = project.developerName
                        email = project.developerEmail
                    }
                }
            }
        }
    }
}

// sign all artifacts
signing {
    required { gradle.taskGraph.hasTask(uploadArchives) }
    sign configurations.archives
}

subprojects {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                // sign artifacts before upload
                beforeDeployment { MavenPublication deployment -> signing.signPom(deployment) }

                // upload to sonatype OSS (snapshot/release)
                repository(url: this.version.endsWith('-SNAPSHOT') ?
                        'https://oss.sonatype.org/content/repositories/snapshots' :
                        'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
                    authentication(userName: this.hasProperty('sonatypeUsername') ? sonatypeUsername : '',
                            password: this.hasProperty('sonatypePassword') ? sonatypePassword : '')
                }

                pom {
                    name = project.name
                    description = project.description
                    url = project.project_website

                    scm {
                        url = project.project_scm
                        connection = project.project_scm
                        developerConnection = project.project_scm
                    }

                    licenses {
                        license {
                            name = project.license
                            url = project.license_url
                            distribution = 'repo'
                        }
                    }

                    developers {
                        developer {
                            id = project.developerId
                            name = project.developerName
                            email = project.developerEmail
                        }
                    }
                }
            }
        }
    }
}
